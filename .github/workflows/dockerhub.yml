name: dockerhub

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Version being targeted (heads/main for latest or tags/version for versioned release)"
        required: true
        default: "refs/heads/main"
  pull_request:
    branches:
      - "main"
  # push:
  #   branches:
  #     - "main"

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  runiac-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: "Log into registry"
        run: echo "${{ secrets.DOCKERHUB_PASSWORD}}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME}}" --password-stdin
      - name: "Build containers"
        run: bash ./build_containers.sh
        env:
          REF: ${{ github.event.inputs.ref }}
          TYPE: core
          GITHUB_EVENT: ${{ github.event_name }}
  runiac-csp:
    needs: runiac-core
    strategy:
     matrix:
      csp: ["aws", "gcp", "azure"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: "Log into registry"
        run: echo "${{ secrets.DOCKERHUB_PASSWORD}}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME}}" --password-stdin
      - name: "Build containers"
        run: bash ./build_containers.sh
        env:
          REF: ${{ github.event.inputs.ref }}
          TYPE: ${{ matrix.csp }}
          GITHUB_EVENT: ${{ github.event_name }}
  runiac-full:
    needs: [runiac-core, runiac-csp]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: "Log into registry"
        run: echo "${{ secrets.DOCKERHUB_PASSWORD}}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME}}" --password-stdin
      - name: "Build containers"
        run: bash ./build_containers.sh
        env:
          REF: ${{ github.event.inputs.ref }}
          TYPE: full
          GITHUB_EVENT: ${{ github.event_name }}
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        if: ${{ github.event_name == 'workflow_dispatch' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: runiac/deploy
          short-description: ${{ github.event.repository.description }}
